apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    stand: {{ .Values.stand }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      stand: {{ .Values.stand }}
  serviceName: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        stand: {{ .Values.stand }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ .Release.Name }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: redis_password
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        ports:
          - containerPort: {{ .Values.service.targetPort }}
            name: {{ .Values.service.portName }}
            protocol: TCP
        livenessProbe:
          {{- with .Values.livenessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        readinessProbe:
          {{- with .Values.readinessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        volumeMounts:
          - name: data
            mountPath: /bitnami/redis/data
          {{- with .Values.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}